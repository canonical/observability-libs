# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
envlist = lint, static-{lib,unit}, unit
isolated_build=true

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {[vars]src_path}
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8 < 5
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip venv --skip .mypy_cache
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{lib,unit}]
description = Run static analysis checks
setenv =
    unit: MYPYPATH = {[vars]src_path}
deps =
    -r{toxinidir}/requirements-dev.txt
    mypy
    types-PyYAML
    types-setuptools
    types-toml
commands =
    lib: mypy {[vars]src_path} {posargs}
    unit: mypy {[vars]tst_path} {posargs}

[testenv:unit]
description = Run unit tests
deps =
    -r{toxinidir}/requirements-dev.txt
    coverage[toml]
commands =
    coverage run --branch -m unittest discover {[vars]tst_path}
    coverage report -m
